<?php

namespace Jhonzya\SupercellApi\Test;

use GuzzleHttp\Client;
use Jhonzya\SupercellApi\Supercell;

class SupercellTest extends SupercellBase
{
    protected $mock;

    protected function setUp(): void
    {
        $this->mock = $this->getMockForAbstractClass(
            Supercell::class,
            [$this->token, $this->getMockClient($this->getJsonResponse('getClan.json'))]
        );

        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testSupercellRequestReturnArray()
    {
        $response = $this->mock->request('/', [], [], 'array');
        $this->assertIsArray($response);
    }

    public function testSupercellRequestReturnObject()
    {
        $response = $this->mock->request('/', [], [], 'object');
        $this->assertIsObject($response);
    }

    public function testSupercellRequestReturnString()
    {
        $response = $this->mock->request('/');
        $this->assertIsString($response);
    }

    public function testSupercellRequestReturnDefaultString()
    {
        $response = $this->mock->request('/', [], [], 'other');
        $this->assertIsString($response);
    }

    public function testSupercellHttpClientReturnClient()
    {
        $this->assertEquals(Client::class, get_class($this->mock->getHttpClient()));

        $other = $this->getMockForAbstractClass(
            Supercell::class,
            [$this->token]
        );

        $this->assertEquals(Client::class, get_class($other->getHttpClient()));
    }

    protected function getJsonResponse(string $file)
    {
        return file_get_contents(__DIR__ . "/Mocks/ClashOfClans/{$file}");
    }
}
